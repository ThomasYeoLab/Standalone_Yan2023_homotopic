function [lh_cov_mat, rh_cov_mat, dim] = CBIG_hMRF_build_prod_matrix(lh_input_file, rh_input_file,...
    lh_output_file, rh_output_file)
% CBIG_hMRF_build_prod_matrix(lh_input_file, rh_input_file, lh_output_file, rh_output_file)
%
% This function generates the premultiplied matrix with the input concatenated time series data.
%
% Input:
%   - <lh/rh>_input_filename: (char string)
%     The path to the input <lh/rh> concatenated time series file, generated by xx_gwMRF_build_time_matrix.
%
% Optional input:
%
%   - <lh/rh>_output_file: (char string)
%     The path to the output <lh/rh> premultiplied matrix file; if not provided, output matrices would not be saved.
%
% Output:
%   - <lh/rh>_multi_mat (matrix)
%     The NxN premultipled matrix for each hemisphere, respectively. N is the number of vertices on the given surface
%     mesh, excluding the medial wall vertices.
%
% Example:
%   CBIG_hMRF_build_prod_matrix('./lh_concat_timeseries.mat', './rh_concat_timeseries.mat',...
%   './output/lh_pmm.mat', './output/rh_pmm.mat')
%
% Written by Xiaoxuan Yan and CBIG under MIT license: https://github.com/ThomasYeoLab/CBIG/blob/master/LICENSE.md

if(~exist('lh_output_file', 'var'))
    warning('Output premultiplied matrices would not be saved.');
end

%% left hemisphere
load(lh_input_file, 'lh_time_mat');

% compute unit norm
for i = 1:size(lh_time_mat,1)
    lh_time_mat(i,:) = lh_time_mat(i,:) - mean(lh_time_mat(i,:));
    lh_time_mat(i,:) = lh_time_mat(i,:) / sqrt(sum(lh_time_mat(i,:).^2,2));
end

lh_cov_mat = lh_time_mat * lh_time_mat';
dim = size(lh_time_mat,2);

if(exist('lh_output_file', 'var'))
    save(lh_output_file,'lh_cov_mat','dim','-v7.3');
end

clear lh_time_mat dim;

%% right hemisphere  
load(rh_input_file, 'rh_time_mat');

% compute unit norm
for i = 1:size(rh_time_mat,1) %% zero mean,make unit norm
    rh_time_mat(i,:) = rh_time_mat(i,:) - mean(rh_time_mat(i,:));
    rh_time_mat(i,:) = rh_time_mat(i,:) / sqrt(sum(rh_time_mat(i,:).^2,2));
end

rh_cov_mat = rh_time_mat * rh_time_mat';
dim = size(rh_time_mat,2);

if(exist('rh_output_file', 'var'))
    save(rh_output_file,'rh_cov_mat','dim','-v7.3');
end
end
