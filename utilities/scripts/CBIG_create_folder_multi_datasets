#!/bin/bash

# This script create a data folder including multiple datasets.
# The folder permission will be set to 700.
# User csv file will be updated. 
# Written by XUE Aihuiping and CBIG under MIT license: https://github.com/ThomasYeoLab/CBIG/blob/master/LICENSE.md

record_dir="/mnt/isilon/CSC1/Yeolab/CodeMaintenance/Records"
dataset_csv="${record_dir}/datasets_info/dataset_groups.csv"
options_file="${record_dir}/datasets_info/user_choices.txt"
user=`whoami`
user_csv="${record_dir}/user_datasets/$user.csv"

while IFS=',' read -r col1 col2; do
    datasets+=("$col1")
    groupnames+=("$col2")
done < "$dataset_csv"

# Sort the options by the frequncy of a dataset been chosen. So popular datasets will be at the top.
option_counts=$(sort "$options_file" | uniq -c | sort -nr)
frequencies=()
option_names=()

while read -r line; do
    frequency=$(echo "$line" | awk '{print $1}')
    option_name=$(echo "$line" | awk '{$1=""; print $0}' | xargs)  # Remove leading spaces
    frequencies+=("$frequency")
    option_names+=("$option_name")
done <<< "$option_counts"

declare -A option_to_frequency
for ((i = 0; i < ${#option_names[@]}; i++)); do
    option_to_frequency["${option_names[$i]}"]="${frequencies[$i]}"
done

sorted_data=($(for ((i = 0; i < ${#datasets[@]}; i++)); do
    dataset="${datasets[$i]}"
    groupname="${groupnames[$i]}"
    frequency="${option_to_frequency[$dataset]}"
    echo "${frequency}:${dataset}:${groupname}"
done | sort -t: -k1,1nr))

sorted_datasets=()
sorted_groupnames=()

for element in "${sorted_data[@]}"; do
    IFS=":" read -r frequency dataset groupname <<< "$element"
    sorted_datasets+=("$dataset")
    sorted_groupnames+=("$groupname")
done

datasets=("Stop")
datasets+=("${sorted_datasets[@]}")
groupnames=("NA")
datasets+=("${sorted_groupnames[@]}")

read -p "Enter the path you want to locate your data folder: " data_dir

# Calculate max_display based on terminal window size
rows=$(tput lines)
max_display=$((rows - 4))  # Adjust this value as needed

selected=0
scroll=0
selections=""

print_menu() {
    clear
    echo "Data dir: $data_dir"
    echo "Current choice:${selections}"
    echo "Choose datasets (select Stop to finish):"
    for i in $(seq $scroll $(($scroll + max_display - 1))); do
        if [ $i -eq $selected ]; then
            echo " > ${datasets[$i]}"
        else
            echo "   ${datasets[$i]}"
        fi
    done
}

print_menu

while true; do
    read -sn 1 key
    case $key in
        A) # Up arrow key
            ((selected--))
            if [ $selected -lt 0 ]; then
                selected=$((${#datasets[@]} - 1))
                scroll=$((${#datasets[@]} - max_display))
            elif [ $selected -lt $scroll ]; then
                scroll=$selected
            fi
            print_menu
            ;;
        B) # Down arrow key
            ((selected++))
            if [ $selected -ge ${#datasets[@]} ]; then
                selected=0
                scroll=0
            elif [ $selected -ge $(($scroll + max_display)) ]; then
                ((scroll++))
            fi
            print_menu
            ;;
        "") # Enter key
            clear
            choice="${datasets[$selected]}"
            selections="${selections} ${choice}"
            
            if [ "$choice" == "Stop" ]; then
                break
            fi
            print_menu
            ;;
    esac
done

selections="${selections# }"
selections="${selections% *}"
echo "${selections} are included"
cmd="readlink -f $data_dir"
cmd="${cmd//\'/}"
data_dir=`eval $cmd`
folder="${data_dir}/${selections// /_}"
if [ -d "${folder}" ]; then
    echo "Folder ${folder} already exists. "
    folder_owner=$(stat -c %U "$folder")
    if [ "$folder_owner" != "$user" ]; then
        echo "Folder $folder is owned by $folder_owner, not by you ($user). Please check with folder onwer."
        exit 0
    fi    
else
    mkdir -p ${folder}
    if [ $? -ne 0 ]; then
        exit 0
    fi
    echo "Folder created: ${folder}"
fi
chmod 700 ${folder}
echo "Permission set to 700"
echo "${folder}" > "${folder}/.reg_path"
echo "Do NOT delete this file" >> "${folder}/.reg_path"
for sel_dataset in ${selections}; do
    echo "${sel_dataset},${folder}" >> "${user_csv}"
    echo "${sel_dataset}" >> "${options_file}"
done
echo "${user_csv} updated."
